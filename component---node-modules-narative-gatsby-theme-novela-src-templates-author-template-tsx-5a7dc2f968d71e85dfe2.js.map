{"version":3,"sources":["webpack:///./node_modules/@narative/gatsby-theme-novela/src/components/Navigation/Navigation.Paginator.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/author/Author.Hero.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/sections/author/Author.Articles.tsx","webpack:///./node_modules/@narative/gatsby-theme-novela/src/templates/author.template.tsx"],"names":["Paginator","maxPages","count","props","pageCount","current","index","pageRoot","pathPrefix","getFullPath","n","render","this","previousPath","nextPath","hasNext","hasPrevious","Helmet","rel","href","Frame","PageButton","to","getPageLinks","MobileReference","aria-hidden","previousPage","pagesRange","range","truncatedRange","slice","unshift","splice","length","push","Set","map","page","i","Spacer","key","PageNumberBUtton","style","opacity","className","Component","paginationItemMixin","p","css","theme","colors","primary","mediaqueries","desktop_up","Link","tablet","AuthorHero","author","Hero","HeroImage","RoundedImage","src","avatar","large","Heading","name","Subheading","dangerouslySetInnerHTML","__html","bio","Social","SocialLinks","links","social","background","phablet","Image","fonts","sansSerif","grey","AuthorArticles","articles","AuthorArticlesContainer","alwaysShowAllDetails","card","desktop_medium","desktop","ArticlesPage","location","pageContext","additionalContext","group","Layout","SEO","pathname","title","description","Section","narrow","AuthorPaginator","AuthorsGradient","gradient","colorModeTransition"],"mappings":"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","file":"component---node-modules-narative-gatsby-theme-novela-src-templates-author-template-tsx-5a7dc2f968d71e85dfe2.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\nimport { Link } from \"gatsby\";\nimport { Helmet } from \"react-helmet\";\n\nimport mediaqueries from \"@styles/media\";\nimport { range } from \"@utils\";\n\nimport { IPaginator } from \"@types\";\n\n/**\n * <Paginator />\n *\n * 1 2 3 ... final page NEXT\n * Component to navigate between different pages on a series of blog post, for example.\n *\n * We're using a <nav> element here so make sure to put the pagination component\n * INSIDE of a section to make sure the markup stays contextually relevant\n *\n * Receives the gatsby-paginator props\n */\n\nclass Paginator extends Component<IPaginator, {}> {\n  maxPages = 3;\n  count = this.props.pageCount;\n  current = this.props.index;\n  pageRoot = this.props.pathPrefix;\n\n  get nextPath() {\n    return this.getFullPath(this.current + 1);\n  }\n\n  get previousPath() {\n    return this.getFullPath(this.current - 1);\n  }\n\n  /**\n   * Utility function to return a 1 ... 5 6 7 ... 10 style pagination\n   */\n  get getPageLinks() {\n    const current = this.current;\n    const count = this.count;\n    const maxPages = this.maxPages;\n\n    // Current is the page we're on\n    // We want to show current - 1, current, current + 1\n    // Of course if we're on page 1, we don't want a page 0\n    const previousPage = current === 1 ? current : current - 1;\n\n    // Now create a range of numbers from the previousPage to the total pages (count)\n    const pagesRange = range(previousPage, count + 1 - previousPage);\n\n    // We might need to truncate that pagesRange if it's\n    // more than the max pages we wish to display (3)\n    const truncatedRange: Array<number | null> = pagesRange.slice(0, maxPages);\n\n    // Throughout this function we might add a null to our pages range.\n    // When it comes to rendering our range if we find a null we'll add a spacer.\n\n    // We might need a spacer at the start of the pagination e.g. 1 ... 3 4 5 etc.\n    // If we're after the second page, we need a ... spacer (3 and up)\n    if (pagesRange[0] > 2) {\n      truncatedRange.unshift(null);\n    }\n    // If we're after the first page, we need page 1 to appear (2 and up)\n    if (pagesRange[0] > 1) {\n      truncatedRange.unshift(1);\n    }\n\n    // If we're on the final page, then there won't be a \"next\" page and\n    // the pagination will end up looking a bit short (e.g. on 8 pages ... 7, 8)\n    // Push to the end an extra page maxPages from the end\n    if (pagesRange[0] + 1 === count && pagesRange[0] - 1 > 0) {\n      truncatedRange.splice(\n        pagesRange.length - 1 - maxPages,\n        0,\n        pagesRange[0] - 1,\n      );\n    }\n\n    // We might need a spacer at the end of the pagination e.g. 4 5 6 ... 8\n    // If we're before the penultimate page, we need a ... spacer\n    if (pagesRange[0] + maxPages < count) {\n      truncatedRange.push(null);\n    }\n\n    // If we're before the last page, we need page <last> to appear\n    if (pagesRange[0] + maxPages - 1 < count) {\n      truncatedRange.push(count);\n    }\n\n    return [...new Set(truncatedRange)].map((page: number | null, i) =>\n      page === null ? (\n        // If you find a null in the truncated array then add a spacer\n        <Spacer key={`PaginatorPage_spacer_${i}`} aria-hidden={true} />\n      ) : (\n        // Otherwise render a PageButton\n        <PageNumberBUtton\n          key={`PaginatorPage_${page}`}\n          to={this.getFullPath(page)}\n          style={{ opacity: current === page ? 1 : 0.3 }}\n          className=\"Paginator__pageLink\"\n        >\n          {page}\n        </PageNumberBUtton>\n      ),\n    );\n  }\n\n  /**\n   * Utility to turn an index in to a page path.\n   * All it really does is glue the page path to the front,\n   * but note there's special behaviour for page 1 where the URL should be / not /page/1\n   */\n  getFullPath = (n: number) => {\n    if (this.pageRoot === \"/\") {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"page/\" + n;\n    } else {\n      return n === 1 ? this.pageRoot : this.pageRoot + \"/page/\" + n;\n    }\n  };\n\n  render() {\n    const count = this.count;\n    const current = this.current;\n\n    if (count <= 1) return null;\n\n    const previousPath = this.previousPath;\n    const nextPath = this.nextPath;\n    const hasNext = this.current < this.count;\n    const hasPrevious = this.current > 1;\n\n    return (\n      <>\n        <Helmet>\n          {hasPrevious && <link rel=\"prev\" href={previousPath} />}\n          {hasNext && <link rel=\"next\" href={nextPath} />}\n        </Helmet>\n        <Frame>\n          {hasPrevious && <PageButton to={previousPath}>Prev</PageButton>}\n          {this.getPageLinks}\n          <MobileReference aria-hidden=\"true\">\n            <em>{current}</em>&nbsp;of {count}\n          </MobileReference>\n          {hasNext && <PageButton to={nextPath}>Next</PageButton>}\n        </Frame>\n      </>\n    );\n  }\n}\n\nexport default Paginator;\n\nconst paginationItemMixin = p => css`\n  line-height: 1;\n  color: ${p.theme.colors.primary};\n  padding: 0;\n  width: 6.8rem;\n  height: 6.8rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-variant-numeric: tabular-nums;\n\n  ${mediaqueries.desktop_up`\n    display: block;\n    width: auto;\n    height: auto;\n    padding: 2rem;\n\n    &:first-of-type {\n      padding-left: 0;\n    }\n\n    &:last-child {\n      padding-right: 0;\n    }\n  `}\n`;\n\nconst PageButton = styled(Link)`\n  font-weight: 600;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst PageNumberBUtton = styled(Link)`\n  font-weight: 400;\n  font-size: 18px;\n  text-decoration: none;\n  color: ${p => p.theme.colors.primary};\n  ${paginationItemMixin}\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n    text-decoration: underline;\n  }\n`;\n\nconst Spacer = styled.span`\n  opacity: 0.3;\n  ${paginationItemMixin}\n  &::before {\n    content: \"...\";\n  }\n`;\n\nconst MobileReference = styled.span`\n  font-weight: 400;\n  ${paginationItemMixin}\n  color: ${p => p.theme.colors.primary};\n\n  em {\n    font-style: normal;\n    color: ${p => p.theme.colors.primary};\n  }\n`;\n\nconst Frame = styled.nav`\n  position: relative;\n  z-index: 1;\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n\n  ${mediaqueries.tablet`\n    .Paginator__pageLink, ${Spacer} { display: none; }\n    left: -15px;\n  `}\n\n  ${mediaqueries.desktop_up`\n    justify-content: flex-start;\n    ${MobileReference} { display: none; }\n  `}\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Image from \"@components/Image\";\n\nimport mediaqueries from \"@styles/media\";\nimport { IAuthor } from \"@types\";\n\nimport SocialLinks from \"@components/SocialLinks\";\n\ninterface AuthorHeroProps {\n  author: IAuthor;\n}\n\nconst AuthorHero: React.FC<AuthorHeroProps> = ({ author }) => {\n  return (\n    <Hero>\n      <HeroImage>\n        <RoundedImage src={author.avatar.large} />\n      </HeroImage>\n      <Heading>{author.name}</Heading>\n      <Subheading dangerouslySetInnerHTML={{__html: author.bio}}></Subheading>\n      <Social>\n        <SocialLinks links={author.social} />\n      </Social>\n    </Hero>\n  );\n};\n\nexport default AuthorHero;\n\nconst Hero = styled.div`\n  position: relative;\n  z-index: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin: 35px auto 110px;\n`;\n\nconst HeroImage = styled.div`\n  position: relative;\n  z-index: 1;\n  height: 164px;\n  width: 164px;\n  margin-bottom: 35px;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 2px solid ${p => p.theme.colors.background};\n  box-shadow: 0px 15.619px 31.2381px rgba(0, 0, 0, 0.15);\n\n  ${mediaqueries.tablet`\n    width: 146px;\n    height: 146px;\n  `}\n\n  ${mediaqueries.phablet`\n    width: 136px;\n    height: 136px;\n    margin-bottom: 25px;\n  `}\n`;\n\nconst RoundedImage = styled(Image)`\n  border-radius: 50%;\n`;\n\nconst Heading = styled.h1`\n  font-size: 38px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  color: ${p => p.theme.colors.primary};\n  margin-bottom: 15px;\n  font-weight: 600;\n\n  ${mediaqueries.tablet`\n  `}\n\n  ${mediaqueries.phablet`\n  `}\n`;\n\nconst Subheading = styled.p`\n  margin: 0 auto;\n  max-width: 450px;\n  color: ${p => p.theme.colors.grey};\n  font-size: 18px;\n  font-family: ${p => p.theme.fonts.sansSerif};\n  line-height: 1.4;\n  text-align: center;\n\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `}\n`;\n\nconst Social = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 35px;\n\n  ${mediaqueries.phablet`\n    font-size: 14px;\n  `}\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport mediaqueries from \"@styles/media\";\nimport { IArticle } from \"@types\";\n\nimport ArticlesList from \"../articles/Articles.List\";\n\ninterface AuthorArticlesProps {\n  articles: IArticle[];\n}\n\nconst AuthorArticles: React.FC<AuthorArticlesProps> = ({ articles }) => {\n  return (\n    <AuthorArticlesContainer>\n      <ArticlesList articles={articles} alwaysShowAllDetails />\n    </AuthorArticlesContainer>\n  );\n};\n\nexport default AuthorArticles;\n\nconst AuthorArticlesContainer = styled.div`\n  background: linear-gradient(\n    180deg,\n    ${p => p.theme.colors.card} 0%,\n    rgba(249, 250, 252, 0) 91.01%\n  );\n  border-radius: 8px;\n  padding: 88px 98px;\n  position: relative;\n  z-index: 1;\n\n  ${mediaqueries.desktop_medium`\n    padding: 80px;\n  `}\n\n  ${mediaqueries.desktop`\n    padding: 0;\n    background: transparent;\n  `}\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\n\nimport Section from \"@components/Section\";\nimport SEO from \"@components/SEO\";\nimport Layout from \"@components/Layout\";\nimport Paginator from \"@components/Navigation/Navigation.Paginator\";\n\nimport AuthorHero from \"../sections/author/Author.Hero\";\nimport AuthorArticles from \"../sections/author/Author.Articles\";\n\nimport { Template } from \"@types\";\n\nconst ArticlesPage: Template = ({ location, pageContext }) => {\n  const author = pageContext.additionalContext.author;\n  const articles = pageContext.group;\n\n  return (\n    <Layout>\n      <SEO\n        pathname={location.pathname}\n        title={author.name}\n        description={author.bio}\n      />\n      <Section narrow>\n        <AuthorHero author={author} />\n        <AuthorArticles articles={articles} />\n        <AuthorPaginator>\n          <Paginator {...pageContext} />\n        </AuthorPaginator>\n      </Section>\n      <AuthorsGradient />\n    </Layout>\n  );\n}\n\nexport default ArticlesPage;\n\nconst AuthorsGradient = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 590px;\n  z-index: 0;\n  pointer-events: none;\n  background: ${p => p.theme.colors.gradient};\n  transition: ${p => p.theme.colorModeTransition};\n`;\n\nconst AuthorPaginator = styled.div`\n  text-align: center;\n`;\n"],"sourceRoot":""}